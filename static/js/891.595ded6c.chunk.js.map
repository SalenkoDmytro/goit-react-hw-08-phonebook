{"version":3,"file":"static/js/891.595ded6c.chunk.js","mappings":"qPAEaA,EAAKC,EAAAA,GAAAA,GAAH,kNAKO,qBAAGC,MAAkBC,OAAOC,IAA5B,IAMTC,EAAOJ,EAAAA,GAAAA,EAAH,8GAOJK,EAASL,EAAAA,GAAAA,OAAH,mUACG,qBAAGC,MAAkBC,OAAOI,KAA5B,IACX,qBAAGL,MAAkBC,OAAOK,KAA5B,IACW,qBAAGN,MAAkBC,OAAOI,KAA5B,IAUT,qBAAGL,MAAkBC,OAAOI,KAA5B,IACW,qBAAGL,MAAkBC,OAAOC,IAA5B,I,SCPxB,I,EAAA,EArBA,YAAgD,IAArBK,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,OAAQC,EAAM,EAANA,GACjCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACb,EAAD,YACE,SAAC,KAAD,CAAQS,KAAMA,EAAMK,OAAO,EAAMC,KAAM,MACvC,UAACV,EAAD,WACGI,EADH,MACU,0BAAOC,QAEjB,SAACJ,EAAD,CAAQU,KAAK,SAASC,QAAS,kBAAML,GAASM,EAAAA,EAAAA,IAAcP,GAA7B,EAA/B,sBAKL,ECjBYQ,EAAOlB,EAAAA,GAAAA,GAAH,4D,oBCAJmB,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAEC,OAAQ,QACxBC,SAAS,GAGd,ECLM,SAASC,IACd,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAE9B,OACE,UAACf,EAAD,WACGc,IAAa,SAACb,EAAD,KACZa,GACAH,EAASK,KAAI,YAA2B,IAAxBxB,EAAuB,EAAvBA,GAAIF,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACxB,OACE,SAAC,EAAD,CAA0BD,KAAMA,EAAMC,OAAQA,EAAQC,GAAIA,GAApCA,EAEzB,MAGR,C,gBCtBYyB,EAAenC,EAAAA,GAAAA,MAAH,sNAEH,qBAAGC,MAAkBC,OAAOK,KAA5B,IACA,qBAAGN,MAAkBC,OAAOkC,WAA5B,IAKE,qBAAGnC,MAAkBC,OAAOmC,WAA5B,ICNjB,SAASC,IACd,IAAM3B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,sDAEE,SAACuB,EAAD,CAAcpB,KAAK,OAAOP,KAAK,SAAS+B,SARvB,SAAAC,GACnB,IAAQC,EAAUD,EAAEE,cAAZD,MACR9B,GAASgC,EAAAA,EAAAA,GAAUF,GACpB,MAQF,CCfD,IAUA,EAVoB,WAClB,OACE,iCACE,sCACA,SAACH,EAAD,KACA,SAACV,EAAD,MAGL,C","sources":["components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Li = styled.li`\n  display: flex;\n  text-align: center;\n  justify-content: baseline;\n  padding: 5px 20px;\n  background-color: ${({ theme }) => theme.colors.gray};\n  max-width: 300px;\n  border-radius: 7px;\n  margin-bottom: 5px;\n`;\n\nexport const Text = styled.p`\n  margin: 0 0 0 10px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n`;\n\nexport const Button = styled.button`\n  background-color: ${({ theme }) => theme.colors.black};\n  color: ${({ theme }) => theme.colors.white};\n  border: 1px solid ${({ theme }) => theme.colors.black};\n  border-radius: 82px;\n  margin-left: auto;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  letter-spacing: 0.05em;\n  text-transform: uppercase;\n\n  &:active {\n    color: ${({ theme }) => theme.colors.black};\n    background-color: ${({ theme }) => theme.colors.gray};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport Avatar from 'react-avatar';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Li, Button, Text } from './ContactListItem.styled';\n\nfunction ContactListItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  return (\n    <Li>\n      <Avatar name={name} round={true} size={20} />\n      <Text>\n        {name}: <span>{number}</span>\n      </Text>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Button>\n    </Li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#111611\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ margin: 'auto' }}\n      visible={true}\n    />\n  );\n};\n","import ContactListItem from 'components/ContactListItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/contactsSelectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport function ContactList() {\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <List>\n      {isLoading && <Loader />}\n      {!isLoading &&\n        contacts.map(({ id, name, number }) => {\n          return (\n            <ContactListItem key={id} name={name} number={number} id={id} />\n          );\n        })}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterStyled = styled.input`\n  margin-left: 10px;\n  background-color: ${({ theme }) => theme.colors.white};\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\n  border-radius: 7px;\n\n  &:focus {\n    outline: none;\n    border: 2px solid ${({ theme }) => theme.colors.accentColor};\n    border-radius: 5px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/filter/filterSlice';\nimport { FilterStyled } from './Filter.styled';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    dispatch(addFilter(value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <FilterStyled type=\"text\" name=\"filter\" onChange={handleChange} />\n    </label>\n  );\n}\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst ContactPage = () => {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactPage;\n"],"names":["Li","styled","theme","colors","gray","Text","Button","black","white","name","number","id","dispatch","useDispatch","round","size","type","onClick","deleteContact","List","Loader","height","width","radius","color","ariaLabel","wrapperStyle","margin","visible","ContactList","contacts","useSelector","selectVisibleContacts","isLoading","selectIsLoading","map","FilterStyled","borderColor","accentColor","Filter","onChange","e","value","currentTarget","addFilter"],"sourceRoot":""}
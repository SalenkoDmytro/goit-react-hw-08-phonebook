{"version":3,"file":"static/js/94.64294141.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!contacts) return;\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/contacts/operations';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n// import { Notification } from 'components/Toast/Toast';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  // const [show, setShow] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      reset();\n      return Notiflix.Notify.failure(`${name} is already in contacts`);\n    }\n\n    Notiflix.Notify.success(`You have added ${name} to contacts`);\n    // setShow(true);\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"contactFormName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter contact name\"\n        />\n        <Form.Text className=\"text-muted\">\n          We will save your contacts. Only you can see them.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"contactFormPhone\">\n        <Form.Label>Number</Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Phone number\"\n        />\n      </Form.Group>\n\n      <Button variant=\"outline-primary\" type=\"submit\">\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Avatar from 'react-avatar';\n\nexport const Li = styled(ListGroup.Item)`\n  display: flex;\n  text-align: center;\n  border-radius: 7px;\n  margin-bottom: 5px;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  margin-left: 10px;\n  font-size: 22px;\n`;\nexport const Number = styled.span`\n  margin-left: 50px;\n  font-weight: 700;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  margin-left: auto;\n`;\n\nexport const AvatarStyled = styled(Avatar)`\n  margin-left: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  Li,\n  Text,\n  ButtonStyled,\n  AvatarStyled,\n  Number,\n} from './ContactListItem.styled';\nimport Notiflix from 'notiflix';\n\nexport function ContactListItem({ name, number, id }) {\n  const dispatch = useDispatch();\n\n  return (\n    <Li variant=\"light\">\n      <AvatarStyled name={name} round={true} size={30} />\n      <Text>\n        {name}: <Number>{number}</Number>\n      </Text>\n\n      <ButtonStyled\n        variant=\"danger\"\n        type=\"button\"\n        onClick={() => {\n          Notiflix.Notify.failure(`You have removed ${name} from contacts`);\n\n          dispatch(deleteContact(id));\n        }}\n        size=\"sm\"\n      >\n        Delete\n      </ButtonStyled>\n    </Li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#111611\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ margin: 'auto' }}\n      visible={true}\n    />\n  );\n};\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/contactsSelectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <ListGroup as=\"ol\" numbered>\n          {contacts.map(({ id, name, number }) => {\n            return (\n              <ContactListItem key={id} name={name} number={number} id={id} />\n            );\n          })}\n        </ListGroup>\n      )}\n    </>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/filter/filterSlice';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    dispatch(addFilter(value));\n  };\n\n  return (\n    <>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Text id=\"basic-addon3\">\n          Find contacts by name\n        </InputGroup.Text>\n        <Form.Control\n          id=\"basic-url\"\n          aria-describedby=\"basic-addon3\"\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleChange}\n        />\n      </InputGroup>\n    </>\n  );\n}\n","import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst ContactPage = () => {\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            <h1>ADD NEW CONTACTS</h1>\n            <ContactForm />\n          </Col>\n          <Col>\n            <h2>Your contacts</h2>\n            <Filter />\n            <ContactList />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default ContactPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","Form","onSubmit","preventDefault","some","contact","Notiflix","addContact","className","controlId","onChange","type","pattern","title","required","placeholder","Button","variant","Li","styled","ListGroup","Text","Number","ButtonStyled","AvatarStyled","Avatar","ContactListItem","id","round","size","onClick","deleteContact","Loader","height","width","radius","color","ariaLabel","wrapperStyle","margin","visible","ContactList","useEffect","fetchContacts","as","numbered","map","Filter","InputGroup","addFilter","Container","Row","Col"],"sourceRoot":""}
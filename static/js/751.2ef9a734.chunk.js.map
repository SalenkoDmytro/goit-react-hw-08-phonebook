{"version":3,"file":"static/js/751.2ef9a734.chunk.js","mappings":"+OAKaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,UAACC,EAAA,EAAD,CAAMC,SAda,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfP,GACEQ,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAG+BC,aAAa,MAA3C,WACE,UAACb,EAAA,QAAD,CAAYc,UAAU,OAAOC,UAAU,mBAAvC,WACE,SAACf,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEgB,KAAK,OACLT,KAAK,OACLU,QAAQ,eACRC,MAAM,yBACNC,UAAQ,EACRC,YAAY,uBAIhB,UAACpB,EAAA,QAAD,CAAYc,UAAU,OAAOC,UAAU,oBAAvC,WACE,SAACf,EAAA,QAAD,qBACA,SAACA,EAAA,UAAD,CACEgB,KAAK,QACLT,KAAK,QACLU,QAAQ,0CACRE,UAAQ,EACRC,YAAY,iBAEd,SAACpB,EAAA,OAAD,CAAWc,UAAU,aAArB,sDAKF,UAACd,EAAA,QAAD,CAAYc,UAAU,OAAOC,UAAU,oBAAvC,WACE,SAACf,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEgB,KAAK,WACLT,KAAK,WACLU,QAAQ,uCACRC,MAAM,8GACNC,UAAQ,EACRC,YAAY,iBAIhB,SAACC,EAAA,EAAD,CAAQC,QAAQ,kBAAkBN,KAAK,SAAvC,8BAKL,EC5DD,EAJqB,WACnB,OAAO,SAACnB,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Form.Group className=\"mb-3\" controlId=\"registerFormName\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          type=\"name\"\n          name=\"name\"\n          pattern=\"[A-Za-z]{5,}\"\n          title=\"Choose unique username\"\n          required\n          placeholder=\"Enter username\"\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"registerFormEmail\">\n        <Form.Label>Email</Form.Label>\n        <Form.Control\n          type=\"email\"\n          name=\"email\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n          required\n          placeholder=\"Enter email\"\n        />\n        <Form.Text className=\"text-muted\">\n          Example characters@characters.domain\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"registerFormPhone\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          name=\"password\"\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n          title=\"Must contain at least one  number and one uppercase and lowercase letter, and at least 8 or more characters\"\n          required\n          placeholder=\"Password\"\n        />\n      </Form.Group>\n\n      <Button variant=\"outline-primary\" type=\"submit\">\n        Create account\n      </Button>\n    </Form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["RegisterForm","dispatch","useDispatch","Form","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","className","controlId","type","pattern","title","required","placeholder","Button","variant"],"sourceRoot":""}